import{I as o}from"./entry.03463029.js";import{h as r}from"./index.010e4494.js";const a="/eval";function n(){return r.get(`${a}/selEmpEvalList`)}function s(e){return r.post(`${a}/addEmpEval`,e,{headers:{"Content-Type":"application/json"}})}function c(e){return r.get(`${a}/SearchEmpEval`,{params:e})}function i(e){return r.get(`${a}/searchEmpEvalByDept`,{params:e})}function l(e){return console.log(e),r.get(`${a}/searchEmpEvalByStatus`,{params:e})}function p(e){return console.log(e),r.post(`${a}/updateEmpEval`,e)}function E(e){return console.log(e),r.post(`${a}/updateEmpEvalByDept`,e)}function u(e){return r.delete(`${a}/removeEmpEval`,{params:{searchYear:e.searchYear,empCode:e.empCode}})}function d(e){return console.log(e),r.post(`${a}/registerEvalStatus`,e)}function h(e){return console.log(e),r.post(`${a}/addKpiRegi`,e)}function m(e){return console.log(e),r.post(`${a}/addKpiPerf`,e)}function g(e){return r.get(`${a}/getKpiPerf`,{params:e})}function w(e){return r.get(`${a}/getKpiPlan`,{params:e})}function f(e){return r.delete(`${a}/removeKpiPlan`,{params:{empCode:e.empCode,targetYear:e.targetYear,performanceIndicator:e.performanceIndicator,status:e.status}})}function v(e){return console.log(e),r.post(`${a}/editKpiStatus`,e)}const y=o("evalStore",{state:()=>({evalList:[{deptName:"",disqualification:"",durationOfTraining:"",empCode:"",empName:"",grade:"",lastSchool:"",numberOfCertificate:"",numberOfRestDay:"",positionName:"",remainingHoliday:"",score:"",searchYear:"",status:"",attendanceStatus:""}],kpiList:[{empCode:"",targetYear:"",perfGoal:"",performanceIndicator:"",measurementCriteria:"",unit:"",weight:"",target:"",calcMethod:"",actual:"",achievementRate:"",status:"",score:""}]}),actions:{async FETCH_EVALLIST(){try{console.log("인사고과 대상자 슬롯가져오는 중");const e=await n();return this.evalList=e.data.selEvalList,console.log("슬롯 값 가져옴",e.data),e.data}catch(e){throw new Error(e)}},async ADD_EMP_EVAL(e){try{console.log("대상자 추가중",e);const t=await s(e);return this.evalList=t.data.selEmpEvalList,console.log("추가완료",t.data),t.data}catch(t){throw new Error(t)}},async SEARCH_EMP_EVAL(e){try{console.log("인사고과 조회");const t=await c(e);return this.evalList=t.data.evalList,console.log(t),t.data}catch(t){throw new Error(t)}},async SEARCH_EMP_EVAL_DEPT(e){try{console.log("인사고과 부서별 조회");const t=await i(e);return this.evalList=t.data.evalList,console.log(t),t.data}catch(t){throw new Error(t)}},async SEARCH_EMP_EVAL_STATUS(e){try{console.log("인사고과 승인여부 조회");const t=await l(e);return this.evalList=t.data.evalList,console.log(t),t.data}catch(t){throw new Error(t)}},async UPDATE_EMP_EVAL(e){try{console.log("인사고과 갱신");const t=await p(e);if(t.data.errorCode!==-1)return t.data.errorCode;alert("고과갱신에 실패하였습니다.")}catch(t){throw new Error(t)}},async UPDATE_EMP_EVAL_DEPT(e){try{console.log("인사고과 부서별 갱신");const t=await E(e);if(t.data.errorCode!==-1)return t.data.errorCode;alert("부서별 갱신에 실패하였습니다.")}catch(t){throw new Error(t)}},async DELETE_EMP_EVAL(e){try{return console.log("인사고과 삭제"),await u(e)}catch(t){throw new Error(t)}},async EDIT_EMP_EVAL(e){try{return console.log("인사고과 승인/반려"),(await d(e)).data}catch(t){throw new Error(t)}},async insertEmpKpi(e){console.log("KPI 목표 등록 액션",e);try{return(await h(e)).data}catch(t){throw new Error(t)}},async insertKpiPerf(e){console.log("KPI 성과 등록 액션",e);try{return(await m(e)).data}catch(t){throw new Error(t)}},async fetchKpiPerf(e){try{console.log("KPI 성과 조회 액션",e);const t=await g(e);return this.kpiList=t.data.kpiList,console.log(t),t.data}catch(t){throw new Error(t)}},async fetchKpiPlan(e){try{console.log("KPI 목표 조회");const t=await w(e);return this.kpiList=t.data.kpiList,console.log(t),t.data}catch(t){throw new Error(t)}},async deleteKpiPlan(e){try{return console.log("KPI 목표 삭제"),await f(e)}catch(t){throw new Error(t)}},async updateKpiPlan(e){try{return console.log("KPI 승인/반려"),(await v(e)).data}catch(t){throw new Error(t)}}}});export{y as e};
